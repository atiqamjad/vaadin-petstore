//file:noinspection GroovyAssignabilityCheck

buildscript {
    ext {
        vaadinVersion = "23.2.4"
        springBootVersion = "2.7.5"
    }
}

plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "com.vaadin" version "${vaadinVersion}"
    id "java"
    id 'idea'
    id "maven-publish"
    id 'signing'
    id "io.freefair.lombok" version "6.5.1"
    id "org.liquibase.gradle" version "2.0.4"
}

repositories {
    mavenCentral()
    maven {
        name = "ossrhSnapshot"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
        credentials {
            username = project.ext.properties.ossrhUsername
            password = project.ext.properties.ossrhPassword
        }
        //snapshotsOnly()
    }
    maven {
        name = "sfe4j"
        url = "https://raw.github.com/sfe4j/mvn-repo/master/"
        content {
            includeGroup "com.amoylabs"
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
    }

    resolutionStrategy {
        cacheChangingModulesFor 0, "seconds"
    }
}

allprojects {
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
    }
}

dependencies {
    implementation "com.vaadin:vaadin-spring-boot-starter"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-jdbc"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.liquibase:liquibase-core:4.17.1'
    implementation "org.yaml:snakeyaml:1.33"
    implementation "com.h2database:h2"
    implementation "org.postgresql:postgresql:42.5.0"

    runtimeOnly "org.springframework.boot:spring-boot-devtools"

    // Admin
    //implementation "com.net128.oss.web.lib:web-modules-jpa-csv:0.0.1-SNAPSHOT"
    implementation "com.net128.oss.web.lib:web-modules-jpa-csv:0.2.1"

    implementation 'com.net128.oss.web.lib:web-modules-web-shell:0.2.0'
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation 'org.zeroturnaround:zt-exec:1.12'
    implementation 'info.picocli:picocli:4.7.0'
    implementation 'info.picocli:picocli-spring-boot-starter:4.7.0'
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.codehaus.plexus:plexus-utils:3.5.0'
    implementation 'com.google.guava:guava:31.1-jre'

    implementation 'com.net128.oss.web.lib:web-modules-file-manager:0.2.2-SNAPSHOT'
    implementation "com.net128.oss.web.lib:web-modules-iframe-navigator:0.2.2-SNAPSHOT"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv:2.13.4"
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.12'
    implementation 'org.springdoc:springdoc-openapi-data-rest:1.6.12'
    implementation 'io.github.sevdokimov.logviewer:log-viewer-spring-boot:1.0.3'
    implementation 'com.amoylabs:sfe4j-spring-boot-starter:0.0.9'
}

group = "com.net128.oss.web.app.vaadin"
version = System.getProperty("VERSION", System.getenv("VERSION") ?: '0.0.1-SNAPSHOT')
description = "petstore"
java.sourceCompatibility = JavaVersion.VERSION_11

tasks.withType(JavaCompile) { options.encoding = "UTF-8" }

vaadin {
    optimizeBundle = true
    productionMode = true
}

bootRun { dependsOn vaadinBuildFrontend }
build { dependsOn vaadinBuildFrontend }

apply from: "liquibase.gradle"
project.ext.appId = "petstore"

task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}

jar {
    enabled = false }
bootJar {
    enabled = true
    archiveClassifier.set("")
}

publishing {
    publications {
        bootJava(MavenPublication) {

//        pluginMaven(MavenPublication) {
            artifact bootJar
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = appId
                artifactId = appId
                packaging = 'jar'

                description = 'Vaadin Petstore Application'
                url = 'https://github.com/mike-seger/web-modules/'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'ms'
                        name = 'Michael Seger'
                        email = 'mike-001@net128.com<'
                    }
                }
                scm {
                    connection = 'scm:git:git@github.com:mike-seger/vaadin-petstore.git'
                    developerConnection = 'scm:git:git@github.com:mike-seger/vaadin-petstore.git'
                    url = 'https://github.com/mike-seger/vaadin-petstore'
                }
            }
        }
    }

    repositories {
        maven {
            name = version.endsWith('SNAPSHOT') ? "ossrh" : "ossrhSnapshot"
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = ossrhUsername
                password = ossrhPassword
            }
        }
    }
}

signing {
    sign publishing.publications.bootJava
}